{
  "swagger" : "2.0",
  "info" : {
    "description" : "Semux is an experimental high-performance blockchain platform that powers decentralized application.",
    "version" : "1.0.2",
    "title" : "Semux",
    "contact" : {
      "name" : "Semux Foundation",
      "url" : "https://www.semux.org"
    },
    "license" : {
      "name" : "MIT License",
      "url" : "https://opensource.org/licenses/mit-license.php"
    }
  },
  "basePath" : "/v1.0.2",
  "schemes" : [ "http" ],
  "paths" : {
    "/" : {
      "get" : {
        "summary" : "Get root",
        "operationId" : "getRoot",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetRootResponse"
            }
          }
        }
      }
    },
    "/add_node" : {
      "get" : {
        "summary" : "Add node",
        "description" : "Adds a node to node manager.",
        "operationId" : "addNode",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "node",
          "in" : "query",
          "description" : "Name of the node in host:port format",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddNodeResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/add_to_blacklist" : {
      "get" : {
        "summary" : "Add to blacklist",
        "description" : "Adds an IP address to blacklist.",
        "operationId" : "addToBlacklist",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ip",
          "in" : "query",
          "description" : "IP address",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiHandlerResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/add_to_whitelist" : {
      "get" : {
        "summary" : "Add to whitelist",
        "description" : "Adds an IP address to whitelist.",
        "operationId" : "addToWhitelist",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ip",
          "in" : "query",
          "description" : "IP address",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiHandlerResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/create_account" : {
      "get" : {
        "summary" : "Create account",
        "description" : "Creates a new account.",
        "operationId" : "createAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Assigned alias to the created account.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateAccountResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/delegate" : {
      "get" : {
        "summary" : "Register delegate",
        "description" : "Registers as a delegate",
        "operationId" : "registerDelegate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "Registering address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fee",
          "in" : "query",
          "description" : "Transaction fee",
          "required" : true,
          "type" : "string",
          "pattern" : "^\\d+$",
          "format" : "int64"
        }, {
          "name" : "data",
          "in" : "query",
          "description" : "Delegate name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DoTransactionResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_account" : {
      "get" : {
        "summary" : "Get account",
        "description" : "Returns an account.",
        "operationId" : "getAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "address",
          "in" : "query",
          "description" : "Address of account",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_account_transactions" : {
      "get" : {
        "summary" : "Get account transactions",
        "description" : "Returns transactions from/to an account.",
        "operationId" : "getAccountTransactions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "address",
          "in" : "query",
          "description" : "Address of account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Starting range of transactions",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Ending range of transactions",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountTransactionsResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_block" : {
      "get" : {
        "summary" : "Get block",
        "description" : "Returns a block.",
        "operationId" : "getBlock",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "query",
          "description" : "Hash of block",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetBlockResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_delegate" : {
      "get" : {
        "summary" : "Get a delegate",
        "description" : "Returns a delegate.",
        "operationId" : "getDelegate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "address",
          "in" : "query",
          "description" : "Delegate address",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDelegateResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_delegates" : {
      "get" : {
        "summary" : "Get all delegates",
        "description" : "Returns a list of delegates.",
        "operationId" : "getDelegates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDelegatesResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_info" : {
      "get" : {
        "summary" : "Get info",
        "description" : "Returns kernel info.",
        "operationId" : "getInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetInfoResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_latest_block" : {
      "get" : {
        "summary" : "Get latest block",
        "description" : "Returns the latest block.",
        "operationId" : "getLatestBlock",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetLatestBlockResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_latest_block_number" : {
      "get" : {
        "summary" : "Get latest block number",
        "description" : "Returns the number of the latest block.",
        "operationId" : "getLatestBlockNumber",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetLatestBlockNumberResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_peers" : {
      "get" : {
        "summary" : "Get peers",
        "description" : "Returns connected peers.",
        "operationId" : "getPeers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPeersResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_pending_transactions" : {
      "get" : {
        "summary" : "Get pending transactions",
        "description" : "Returns all the pending transactions.",
        "operationId" : "getPendingTransactions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPendingTransactionsResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_transaction" : {
      "get" : {
        "summary" : "Get transaction",
        "description" : "Returns a transactions if exists.",
        "operationId" : "getTransaction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "query",
          "description" : "Transaction hash",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetTransactionResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_transaction_limits" : {
      "get" : {
        "summary" : "Get transaction limits",
        "description" : "Get minimum fee and maximum size.",
        "operationId" : "getTransactionLimits",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Type of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetTransactionLimitsResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_validators" : {
      "get" : {
        "summary" : "Get validators",
        "description" : "Returns a list of validators.",
        "operationId" : "getValidators",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetValidatorsResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_vote" : {
      "get" : {
        "summary" : "Get vote",
        "description" : "Returns the vote from a voter to a delegate.",
        "operationId" : "getVote",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "delegate",
          "in" : "query",
          "description" : "Delegate address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "voter",
          "in" : "query",
          "description" : "Voter address",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetVoteResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/get_votes" : {
      "get" : {
        "summary" : "Get votes",
        "description" : "Returns all the votes to a delegate",
        "operationId" : "getVotes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "delegate",
          "in" : "query",
          "description" : "Delegate address",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetVotesResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/list_accounts" : {
      "get" : {
        "summary" : "List accounts",
        "description" : "Returns accounts in the wallet.",
        "operationId" : "listAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ListAccountsResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/send_transaction" : {
      "get" : {
        "summary" : "Send a raw transaction",
        "description" : "Broadcasts a raw transaction to the network.",
        "operationId" : "sendTransaction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "raw",
          "in" : "query",
          "description" : "Raw transaction",
          "required" : true,
          "type" : "string",
          "pattern" : "^(0x)?[0-9a-fA-F]+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SendTransactionResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/sign_message" : {
      "get" : {
        "summary" : "Sign a message",
        "description" : "Sign a message.",
        "operationId" : "signMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "address",
          "in" : "query",
          "description" : "Signing address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Message to sign",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SignMessageResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/transfer" : {
      "get" : {
        "summary" : "Transfer coins",
        "description" : "Transfers coins to another address.",
        "operationId" : "transfer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "description" : "Amount of SEM to transfer",
          "required" : true,
          "type" : "string",
          "pattern" : "^\\d+$",
          "format" : "int64"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Sending address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Receiving address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fee",
          "in" : "query",
          "description" : "Transaction fee",
          "required" : true,
          "type" : "string",
          "pattern" : "^\\d+$",
          "format" : "int64"
        }, {
          "name" : "data",
          "in" : "query",
          "description" : "Transaction data",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DoTransactionResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/unvote" : {
      "get" : {
        "summary" : "Unvote",
        "description" : "Unvotes for a delegate.",
        "operationId" : "unvote",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "Voting address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Delegate address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Vote amount",
          "required" : true,
          "type" : "string",
          "pattern" : "^\\d+$",
          "format" : "int64"
        }, {
          "name" : "fee",
          "in" : "query",
          "description" : "Transaction fee",
          "required" : true,
          "type" : "string",
          "pattern" : "^\\d+$",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DoTransactionResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/verify_message" : {
      "get" : {
        "summary" : "Verify a message",
        "description" : "Verify a signed message.",
        "operationId" : "verifyMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "address",
          "in" : "query",
          "description" : "Address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Message",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "signature",
          "in" : "query",
          "description" : "Signature to verify",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VerifyMessageResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/vote" : {
      "get" : {
        "summary" : "Vote",
        "description" : "Votes for a delegate.",
        "operationId" : "vote",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "Voting address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Delegate address",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Vote amount",
          "required" : true,
          "type" : "string",
          "pattern" : "^\\d+$",
          "format" : "int64"
        }, {
          "name" : "fee",
          "in" : "query",
          "description" : "Transaction fee",
          "required" : true,
          "type" : "string",
          "pattern" : "^\\d+$",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DoTransactionResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "ApiHandlerResponse" : {
      "type" : "object",
      "required" : [ "success" ],
      "discriminator" : "ApiHandlerResponse",
      "properties" : {
        "success" : {
          "type" : "boolean"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "GetRootResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      } ]
    },
    "AccountType" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "available" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "locked" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "nonce" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "transactionCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "AddNodeResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      } ]
    },
    "BlockType" : {
      "type" : "object",
      "properties" : {
        "hash" : {
          "type" : "string"
        },
        "number" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "view" : {
          "type" : "integer",
          "format" : "int32"
        },
        "coinbase" : {
          "type" : "string"
        },
        "parentHash" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "date" : {
          "type" : "string"
        },
        "transactionsRoot" : {
          "type" : "string"
        },
        "resultsRoot" : {
          "type" : "string"
        },
        "stateRoot" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionType"
          }
        }
      }
    },
    "CreateAccountResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "string"
          }
        }
      } ]
    },
    "DelegateType" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "registeredAt" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "votes" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "blocksForged" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "turnsHit" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "turnsMissed" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        }
      }
    },
    "DoTransactionResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "string"
          }
        }
      } ]
    },
    "GetAccountResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "$ref" : "#/definitions/AccountType"
          }
        }
      } ]
    },
    "GetAccountTransactionsResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TransactionType"
            }
          }
        }
      } ]
    },
    "GetBlockResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "$ref" : "#/definitions/BlockType"
          }
        }
      } ]
    },
    "GetDelegateResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "$ref" : "#/definitions/DelegateType"
          }
        }
      } ]
    },
    "GetDelegatesResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DelegateType"
            }
          }
        }
      } ]
    },
    "GetInfoResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "$ref" : "#/definitions/InfoType"
          }
        }
      } ]
    },
    "GetLatestBlockNumberResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "string",
            "format" : "int64",
            "pattern" : "^\\d+$"
          }
        }
      } ]
    },
    "GetLatestBlockResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "$ref" : "#/definitions/BlockType"
          }
        }
      } ]
    },
    "GetPeersResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PeerType"
            }
          }
        }
      } ]
    },
    "GetPendingTransactionsResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TransactionType"
            }
          }
        }
      } ]
    },
    "GetTransactionLimitsResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "$ref" : "#/definitions/TransactionLimitsType"
          }
        }
      } ]
    },
    "GetTransactionResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "$ref" : "#/definitions/TransactionType"
          }
        }
      } ]
    },
    "GetValidatorsResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      } ]
    },
    "GetVoteResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "string",
            "format" : "int64",
            "pattern" : "^\\d+$"
          }
        }
      } ]
    },
    "GetVotesResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "format" : "int64",
              "pattern" : "^\\d+$"
            }
          }
        }
      } ]
    },
    "InfoType" : {
      "type" : "object",
      "properties" : {
        "clientId" : {
          "type" : "string"
        },
        "coinbase" : {
          "type" : "string"
        },
        "latestBlockNumber" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "latestBlockHash" : {
          "type" : "string"
        },
        "activePeers" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pendingTransactions" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ListAccountsResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      } ]
    },
    "PeerType" : {
      "type" : "object",
      "properties" : {
        "ip" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32"
        },
        "networkVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "clientId" : {
          "type" : "string"
        },
        "peerId" : {
          "type" : "string"
        },
        "latestBlockNumber" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "latency" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "capabilities" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "SendTransactionResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      } ]
    },
    "SignMessageResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "string"
          }
        }
      } ]
    },
    "TransactionLimitsType" : {
      "type" : "object",
      "properties" : {
        "maxTransactionDataSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minTransactionFee" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "minDelegateBurnAmount" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        }
      }
    },
    "TransactionType" : {
      "type" : "object",
      "properties" : {
        "blockNumber" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "hash" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "from" : {
          "type" : "string"
        },
        "to" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "fee" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "nonce" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "int64",
          "pattern" : "^\\d+$"
        },
        "data" : {
          "type" : "string"
        }
      }
    },
    "VerifyMessageResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ApiHandlerResponse"
      }, {
        "properties" : {
          "result" : {
            "type" : "boolean"
          }
        }
      } ]
    }
  }
}